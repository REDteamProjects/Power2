diff a/Assets/Scripts/Helpers/Vibration.cs b/Assets/Scripts/Helpers/Vibration.cs	(rejected hunks)
@@ -2,55 +2,44 @@
 using Assets.Scripts.Helpers;
 using UnityEngine;
 
-/// <summary>
-/// Code get from GitHub:
-/// https://gist.github.com/aVolpe/707c8cf46b1bb8dfb363
-/// </summary>
-/// 
+ //<summary>
+ //Code get from GitHub:
+ //https://gist.github.com/aVolpe/707c8cf46b1bb8dfb363
+ //</summary>
+ 
 public static class Vibration
 {
-
-//#if UNITY_ANDROID
-//#if !UNITY_EDITOR
-//            public static AndroidJavaClass unityPlayer = new AndroidJavaClass("com.unity3d.player.UnityPlayer");
-//            public static AndroidJavaObject currentActivity = unityPlayer.GetStatic<AndroidJavaObject>("currentActivity");
-//            public static AndroidJavaObject vibrator = currentActivity.Call<AndroidJavaObject>("getSystemService", "vibrator");
-//#else
-//            public static AndroidJavaClass unityPlayer = new AndroidJavaClass("com.unity3d.player.UnityPlayer");
-//            public static AndroidJavaObject currentActivity = unityPlayer.GetStatic<AndroidJavaObject>("currentActivity");
-//            public static AndroidJavaObject vibrator = currentActivity.Call<AndroidJavaObject>("getSystemService", "vibrator");
-//#endif
-//#endif
+#if UNITY_ANDROID
+    #if !UNITY_EDITOR
+        private static AndroidJavaObject vibrationObj = VibrationActivity.activityObj.Get<AndroidJavaObject>("vibration");
+    #else
+        private static AndroidJavaObject vibrationObj;
+    #endif
+#endif
 
     public static void Vibrate()
     {
 #if UNITY_WINRT || UNITY_WP8
         WinRTDeviceHelper.FireVibratePhone(TimeSpan.FromMilliseconds(10));
 #endif
-//#if UNITY_ANDROID 
-//        if (isAndroid())
-//            vibrator.Call("vibrate");
-//        else
-//            Handheld.Vibrate();
-//#endif
+#if UNITY_ANDROID
+        if (Application.platform == RuntimePlatform.Android)
+            vibrationObj.Call("vibrate");
+#endif
 #if UNITY_IOS
         Handheld.Vibrate();
 #endif
     }
 
-
-
     public static void Vibrate(long milliseconds)
     {
 #if UNITY_WINRT || UNITY_WP8
         WinRTDeviceHelper.FireVibratePhone(TimeSpan.FromMilliseconds(milliseconds));
 #endif
-//#if UNITY_ANDROID 
-//        if (isAndroid())
-//            vibrator.Call("vibrate", milliseconds);
-//        else
-//            Handheld.Vibrate();
-//#endif
+#if UNITY_ANDROID 
+        if (Application.platform == RuntimePlatform.Android)
+            vibrationObj.Call("vibrate", milliseconds);
+#endif
 #if UNITY_IOS
         Handheld.Vibrate();
 #endif
